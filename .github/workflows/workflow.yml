name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout du repo
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.12'

      - name: 🔐 Configurer les identifiants AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID_CHEMS }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY_CHEMS }}
          aws-region: eu-central-1

      - name: 🧹 Clean Terraform cache
        run: rm -rf .terraform .terraform.lock.hcl

      - name: 🌍 Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.6' 

      - name: 🚀 Terraform Init
        run: terraform init

      - name: 🔍 Import Lambda si elle existe
        run: |
          set -e
          LAMBDA_NAME="hubspot-pdf-ocr-processor"
          if aws lambda get-function --function-name "$LAMBDA_NAME" > /dev/null 2>&1; then
            echo "✅ Lambda déjà existante, import dans l'état Terraform..."
            terraform import aws_lambda_function.hubspot-pdf-ocr-processor "$LAMBDA_NAME" || true
          else
            echo "ℹ️ Lambda inexistante, elle sera créée par Terraform."
          fi

      - name: 🔎 Terraform Plan
        env:
          TF_VAR_mistral_api_key: ${{ secrets.MISTRAL_API_KEY }}
        run: terraform plan

      - name: 📦 Terraform Apply
        env:
          TF_LOG: DEBUG
          TF_VAR_mistral_api_key: ${{ secrets.MISTRAL_API_KEY }}
        run: terraform apply -auto-approve
